name: Demo Push

on:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - main
      - seed

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  IMAGE_NAME: pilot4-renv-cache
  PLATFORM: linux/amd64,linux/arm64,linux/arm/v7
  R_VERSION: 4.2.0
  RENV_PATHS_LOCKFILE: renv_cache/renv.lock
  RENV_PATHS_ROOT: renv_cache/.cache
  RENV_PATHS_CELLAR: submissions-pilot2/renv/cellar

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  container-build:
    runs-on: ubuntu-latest

    steps:
      - name: System deppendencies
        run: |
          sudo apt update -q
          sudo apt install -y -q qemu-user-static

      - uses: actions/checkout@v3
        with:
          submodules: true

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: 4.2.0 # The R version to download (if necessary) and use.
          # Use "renv" to retrieve R version recorded in renv.lock file.

      - uses: r-lib/actions/setup-renv@v2

      # - name: Buildah Action
      #   uses: redhat-actions/buildah-build@v2
      #   with:
      #     image: ${IMAGE_NAME}
      #     tags: v1 ${{ github.sha }}
      #     containerfiles: |
      #       ./renv_cache/Containerfile
      #     build-args: |
      #       R_VERSION=${ vars.R_VERSION }

      # - name: Log in to Red Hat Registry
      #   uses: redhat-actions/podman-login@v1
      #   with:
      #     registry: ghcr.io
      #     username: ${{ secrets.github.repository_owner }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Log in to registry
      #   # This is where you will update the personal access token to GITHUB_TOKEN
      #   run: echo "${{ secrets.GITHUB_TOKEN }}" | podman login ghcr.io -u $ --password-stdin

      # - name: Push image
      #   run: |
      #     IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
      #
      #     # Change all uppercase to lowercase
      #     IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
      #
      #     # Strip git ref prefix from version
      #     VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
      #
      #     # Strip "v" prefix from tag name
      #     [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
      #
      #     # Use Docker `latest` tag convention
      #     [ "$VERSION" == "main" ] && VERSION=latest
      #     echo IMAGE_ID=$IMAGE_ID
      #     echo VERSION=$VERSION
      #     podman tag $IMAGE_NAME $IMAGE_ID:$VERSION
      #     podman push $IMAGE_ID:$VERSION
